BEGIN
  –- BUY_SELL
  EXECUTE IMMEDIATE 'DROP TABLE BUY_SELL       CASCADE CONSTRAINTS';
  -- SHOP
  EXECUTE IMMEDIATE 'DROP TABLE SHOP           CASCADE CONSTRAINTS';
  -- RECEIVE
  EXECUTE IMMEDIATE 'DROP TABLE RECEIVE       CASCADE CONSTRAINTS';
  -- HAS
  EXECUTE IMMEDIATE 'DROP TABLE HAS       CASCADE CONSTRAINTS';
  -- STORED
  EXECUTE IMMEDIATE 'DROP TABLE STORED         CASCADE CONSTRAINTS';
  -- PLAYER 
  EXECUTE IMMEDIATE 'DROP TABLE PLAYER         CASCADE CONSTRAINTS';
  -- INVENTORY
  EXECUTE IMMEDIATE 'DROP TABLE INVENTORY      CASCADE CONSTRAINTS';
  -- FEED 
  EXECUTE IMMEDIATE 'DROP TABLE FEED           CASCADE CONSTRAINTS';
  -- ANIMAL_SPECIE
  EXECUTE IMMEDIATE 'DROP TABLE ANIMAL_SPECIE   CASCADE CONSTRAINTS';
  -- SUPPLY 
  EXECUTE IMMEDIATE 'DROP TABLE SUPPLY         CASCADE CONSTRAINTS';
  -- SEED 
  EXECUTE IMMEDIATE 'DROP TABLE SEED           CASCADE CONSTRAINTS';
  -- LETTER 
  EXECUTE IMMEDIATE 'DROP TABLE LETTER           CASCADE CONSTRAINTS';
  -- FOOD  
  EXECUTE IMMEDIATE 'DROP TABLE FOOD           CASCADE CONSTRAINTS';
  -- ITEM  
  EXECUTE IMMEDIATE 'DROP TABLE ITEM           CASCADE CONSTRAINTS';
  -- PLACE 
  EXECUTE IMMEDIATE 'DROP TABLE PLACE          CASCADE CONSTRAINTS';
  -- SCHEDULE 
  EXECUTE IMMEDIATE 'DROP TABLE SCHEDULE       CASCADE CONSTRAINTS';
    -- INHABITANT
  EXECUTE IMMEDIATE 'DROP TABLE INHABITANT       CASCADE CONSTRAINTS';
    -- CHARACTER
  EXECUTE IMMEDIATE 'DROP TABLE CHARACTER       CASCADE CONSTRAINTS';
  -- VILLAGE
  EXECUTE IMMEDIATE 'DROP TABLE VILLAGE       CASCADE CONSTRAINTS';
  -- CONTAINS
  EXECUTE IMMEDIATE 'DROP TABLE CONTAINS       CASCADE CONSTRAINTS';
  -- DIALOGUE
  EXECUTE IMMEDIATE 'DROP TABLE DIALOGUE       CASCADE CONSTRAINTS';

  

EXCEPTION
  WHEN OTHERS THEN
    NULL;
END;
/


CREATE TABLE VILLAGE (
  ID_VILLAGE  NUMBER        PRIMARY KEY,
  NAME        VARCHAR2(100) NOT NULL
);

CREATE TABLE CHARACTER (
  ID_CHARACTER  NUMBER        PRIMARY KEY,
  NAME          VARCHAR2(100) NOT NULL,
  AGE           NUMBER,
  GENDER        VARCHAR2(20),
  ID_VILLAGE    NUMBER,
  CONSTRAINT FK_CHARACTER_VILLAGE
    FOREIGN KEY (ID_VILLAGE)
    REFERENCES VILLAGE (ID_VILLAGE)
);

CREATE TABLE INHABITANT (
  ID_INHABITANT        NUMBER       PRIMARY KEY,  
  PERSONAL_DESCRIPTION VARCHAR2(1000),
  BIRTHDAY             DATE,
  PICTURE              BLOB,
  CONSTRAINT FK_INHABITANT_CHARACTER
    FOREIGN KEY (ID_INHABITANT)
    REFERENCES CHARACTER (ID_CHARACTER)
);

CREATE TABLE DIALOGUE (
  ID_DIALOGUE  NUMBER        PRIMARY KEY,
  CONTENT      CLOB          NOT NULL,
  TYPE         VARCHAR2(10)  CHECK (TYPE IN ('OPTIONAL','MANDATORY'))
);

CREATE TABLE CONTAINS (
  ID_DIALOGUE    NUMBER,
  ID_INHABITANT  NUMBER,
  PRIMARY KEY (ID_DIALOGUE, ID_INHABITANT),
  CONSTRAINT FK_CONTAINS_DIALOGUE
    FOREIGN KEY (ID_DIALOGUE)
    REFERENCES DIALOGUE (ID_DIALOGUE),
  CONSTRAINT FK_CONTAINS_INHABITANT
    FOREIGN KEY (ID_INHABITANT)
    REFERENCES INHABITANT (ID_INHABITANT)
);

CREATE TABLE SCHEDULE (
 ID_SCHEDULE   NUMBER        PRIMARY KEY,
 SEASON        VARCHAR2(20), 
 START_TIME    VARCHAR2(5),   
 END_TIME      VARCHAR2(5),    
 DAY_OF_WEEK   VARCHAR2(10)    
);
CREATE TABLE PLACE (
 ID_PLACE      NUMBER        PRIMARY KEY,
 LOCATION_NAME VARCHAR2(200),
 COORDINATES   VARCHAR2(50)
);

CREATE TABLE HAS (
  ID_INHABITANT  NUMBER,
  ID_PLACE       NUMBER,
  ID_SCHEDULE    NUMBER,
  DT_ACTIVE      DATE,
  PRIMARY KEY (ID_INHABITANT, ID_PLACE, ID_SCHEDULE),
  CONSTRAINT FK_HAS_INHABITANT
    FOREIGN KEY (ID_INHABITANT)
    REFERENCES INHABITANT (ID_INHABITANT),
  CONSTRAINT FK_HAS_PLACE
    FOREIGN KEY (ID_PLACE)
    REFERENCES PLACE (ID_PLACE),
  CONSTRAINT FK_HAS_SCHEDULE
    FOREIGN KEY (ID_SCHEDULE)
    REFERENCES SCHEDULE (ID_SCHEDULE)
);

CREATE TABLE ITEM (
   ID_ITEM        NUMBER        PRIMARY KEY,
   NAME           VARCHAR2(100) NOT NULL,
   DESCRIPTION    VARCHAR2(1000),
   PRICE_TO_BUY   NUMBER(10,2),
   PRICE_TO_SELL  NUMBER(10,2)
);

CREATE TABLE LETTER (
  ID_LETTER  NUMBER        PRIMARY KEY,           
  CONTENT    CLOB,
  FONT       VARCHAR2(100),
  CONSTRAINT FK_LETTER_ITEM
    FOREIGN KEY (ID_LETTER)
    REFERENCES ITEM (ID_ITEM)
);

CREATE TABLE FOOD (
   ID_FOOD        NUMBER        PRIMARY KEY,
   INGREDIENTS    VARCHAR2(1000),
   ENERGY_REGAIN  NUMBER,
   HEALTH_REGAIN  NUMBER,
   CONSTRAINT FK_FOOD_ITEM FOREIGN KEY (ID_FOOD)
     REFERENCES ITEM(ID_ITEM)
);
CREATE TABLE SEED (
  ID_SEED      NUMBER PRIMARY KEY,
  SEED_TYPE    VARCHAR2(100),
  NAME_CROP    VARCHAR2(100),
  CONSTRAINT FK_SEED_ITEM FOREIGN KEY (ID_SEED)
    REFERENCES ITEM(ID_ITEM)
);


CREATE TABLE SUPPLY (
   ID_SUPPLY            NUMBER        PRIMARY KEY,
   NUTRITIONAL_VALUE    NUMBER(8),
   NUTRITIONAL_QUALITIES VARCHAR2(500),
   CONSTRAINT FK_SUPPLY_ITEM FOREIGN KEY (ID_SUPPLY)
     REFERENCES ITEM(ID_ITEM)
);
CREATE TABLE ANIMAL_SPECIE (
   ID_ANIMAL_SPECIE NUMBER PRIMARY KEY,
   SPECIE_NAME      VARCHAR2(100)
);
CREATE TABLE FEED (
   ID_SUPPLY          NUMBER,
   ID_ANIMAL_SPECIE   NUMBER,
   PRIMARY KEY (ID_SUPPLY, ID_ANIMAL_SPECIE),
   CONSTRAINT FK_FEED_SUPPLY FOREIGN KEY (ID_SUPPLY)
     REFERENCES SUPPLY(ID_SUPPLY),
   CONSTRAINT FK_FEED_ANIMAL_SPECIE FOREIGN KEY (ID_ANIMAL_SPECIE)
     REFERENCES ANIMAL_SPECIE(ID_ANIMAL_SPECIE)
);
CREATE TABLE INVENTORY (
  ID_INVENTORY NUMBER PRIMARY KEY
);


CREATE TABLE PLAYER (
  ID_PLAYER          NUMBER        PRIMARY KEY,     -- *also* FK → CHARACTER
  AVATAR_APPEARANCE  VARCHAR2(100),
  NICKNAME           VARCHAR2(50),
  GOLD               NUMBER(10,2),
  EXPERIENCE         NUMBER,
  SKILL_LEVEL        VARCHAR2(100),
  SKILL        VARCHAR2(100),
  ID_INVENTORY       NUMBER,
  CONSTRAINT FK_PLAYER_CHARACTER
    FOREIGN KEY (ID_PLAYER)
    REFERENCES CHARACTER (ID_CHARACTER),
  CONSTRAINT FK_PLAYER_INVENTORY
    FOREIGN KEY (ID_INVENTORY)
    REFERENCES INVENTORY (ID_INVENTORY)
);

CREATE TABLE RECEIVE (
  ID_INHABITANT  NUMBER,
  ID_PLAYER      NUMBER,
  ID_LETTER      NUMBER,
  DATE_SENT      DATE,
  EMOTION        VARCHAR2(50),
  PRIMARY KEY (ID_INHABITANT, ID_PLAYER, ID_LETTER, DATE_SENT),
  CONSTRAINT FK_RECEIVE_INHABITANT
    FOREIGN KEY (ID_INHABITANT)
    REFERENCES INHABITANT (ID_INHABITANT),
  CONSTRAINT FK_RECEIVE_PLAYER
    FOREIGN KEY (ID_PLAYER)
    REFERENCES PLAYER (ID_PLAYER),
  CONSTRAINT FK_RECEIVE_LETTER
    FOREIGN KEY (ID_LETTER)
    REFERENCES LETTER (ID_LETTER)
);

CREATE TABLE STORED (
   ID_INVENTORY       NUMBER,
   ID_ITEM            NUMBER,
   QUANTITY           NUMBER        CHECK (QUANTITY <= 64),
   PRIMARY KEY (ID_INVENTORY, ID_ITEM),
   CONSTRAINT FK_STORED_INVENTORY FOREIGN KEY (ID_INVENTORY)
     REFERENCES INVENTORY(ID_INVENTORY),
   CONSTRAINT FK_STORED_ITEM FOREIGN KEY (ID_ITEM)
     REFERENCES ITEM(ID_ITEM)
);
CREATE TABLE SHOP (
  ID_SHOP         NUMBER PRIMARY KEY,
  NAME_SHOP       VARCHAR2(100),
  ID_PLACE        NUMBER,
  ID_INVENTORY    NUMBER,
  CONSTRAINT FK_SHOP_PLACE     FOREIGN KEY (ID_PLACE) REFERENCES PLACE(ID_PLACE),
  CONSTRAINT FK_SHOP_INVENTORY FOREIGN KEY (ID_INVENTORY) REFERENCES INVENTORY(ID_INVENTORY)
);


CREATE TABLE BUY_SELL (
   ID_SHOP           NUMBER,
   ID_PLAYER         NUMBER,
   ID_ITEM           NUMBER,
   ACTION_TIME       DATE,
   ACTION            VARCHAR2(10)  CHECK (ACTION IN ('BUY','SELL')),
   MONEY_FLUCTUATION NUMBER(10,2),
   PRIMARY KEY (ID_SHOP, ID_PLAYER, ID_ITEM, ACTION_TIME),
   CONSTRAINT FK_BS_SHOP   FOREIGN KEY (ID_SHOP)
     REFERENCES SHOP(ID_SHOP),
   CONSTRAINT FK_BS_PLAYER FOREIGN KEY (ID_PLAYER)
     REFERENCES PLAYER(ID_PLAYER),
   CONSTRAINT FK_BS_ITEM   FOREIGN KEY (ID_ITEM)
     REFERENCES ITEM(ID_ITEM)
);


